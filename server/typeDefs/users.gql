type Query {
    users: [User!]!
    me: User
}

type Mutation {
    createUser(input: CreateUserInput!): User!
    confirmUser(input: ConfirmUserInput!): User!
    login(input: LoginInput!): LoginResult!
}

type User {
    id: ID!
    name: String!
    matches: [Match!]!
    inviteCode: String!
}

type LoginResult {
    authToken: String!
}

input CreateUserInput {
    name: String!
}

input ConfirmUserInput {
    name: String!
    email: String!
    inviteCode: String!
    password: String!
}

input LoginInput {
    name: String!
    password: String!
}
